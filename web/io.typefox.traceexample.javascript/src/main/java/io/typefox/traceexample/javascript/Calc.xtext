/*******************************************************************************
 * Copyright (c) 2017 TypeFox (http://www.typefox.io) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
grammar io.typefox.traceexample.javascript.Calc with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate calc "http://www.typefox.io/traceexample/javascript/Calc"

Calculation:
	statements+=Statement*;

Statement:
	Definition | Output;

Definition:
	'let' name=ID '=' expression=Expression;

Output:
	'output' expression=Expression;

Expression:
	Addition;

Addition returns Expression:
	Multiplication ->({BinaryExpression.left=current} operator=('+' | '-') right=Multiplication)*;

Multiplication returns Expression:
	UnaryExpression ({BinaryExpression.left=current} operator=('*' | '/') right=UnaryExpression)*;

UnaryExpression returns Expression:
	({UnaryExpression} operator='-' expression=PrimaryExpression) |
	PrimaryExpression;

PrimaryExpression returns Expression:
	'(' Expression ')' |
	NumberLiteral |
	FeatureCall;

FeatureCall :
	feature=[Definition];

NumberLiteral:
	value=Number;

Number returns ecore::EDouble:
	INT ('.' INT)?;
